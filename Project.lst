Microsoft (R) Macro Assembler Version 14.16.27030.1	    06/04/19 15:26:55
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE macros.inc
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 = 0000001E			linhas = 30
 = 00000078			colunas = 120
 = 0000000C			seletor_offset = 12
 = 00000002			seletor_step = 2

 00000000 00			opcao_selecionada BYTE 0
 00000001 00			tela_atual BYTE 0
 00000002 C9			tela_base BYTE 201, colunas - 2 DUP(205), 187, 0,
	   00000076 [
	    CD
	   ] BB 00
	   0000001C [
	    BA
	    00000076 [
	     20
	    ] BA 00
	   ] C8
	   00000076 [
	    CD
	   ] BC 00
							linhas - 2 DUP(186, colunas - 2 DUP(" "), 186, 0),
							200, colunas - 2 DUP(205), 188, 0

 00000000			.code

				mWriteChar macro chr
					push eax
					mov al, chr
					call WriteChar
					pop eax
				endm

 00000000			main proc
 00000000			mainLp:
 00000000  80 3D 00000001 R		cmp tela_atual, 0
	   00
 00000007  74 14			je tlInit

 00000009  80 3D 00000001 R		cmp tela_atual, 1
	   01
 00000010  74 12			je tlInstr

 00000012  80 3D 00000001 R		cmp tela_atual, 2
	   02
 00000019  74 10			je tlSobre

 0000001B  EB E3			jmp mainLp

 0000001D			tlInit:
 0000001D  E8 00000321			call telaInicial
 00000022  EB DC			jmp mainLp

 00000024			tlInstr:
 00000024  E8 000002C6			call telaInstrucoes
 00000029  EB D5			jmp mainLp

 0000002B			tlSobre:
 0000002B  E8 000002E9			call telaSobre
 00000030  EB CE			jmp mainLp
					

					exit
 00000032  6A 00	   *	    push   +000000000h
 00000034  E8 00000000 E   *	    call   ExitProcess
 00000039			main endp

 00000039			desenharTelaBase proc uses edx ecx
					mGotoxy 0, 0
 00000039  52		   *	    push   edx
 0000003A  51		   *	    push   ecx
 0000003B  52		     1		push edx
 0000003C  B6 00	     1		mov  dh,0
 0000003E  B2 00	     1		mov  dl,0
 00000040  E8 00000000 E     1		call Gotoxy
 00000045  5A		     1		pop  edx
 00000046  BA 00000002 R		mov edx, OFFSET tela_base
 0000004B  B9 0000001E			mov ecx, linhas

 00000050			LtelaBase:
 00000050  E8 00000000 E		call WriteString
 00000055  83 C2 79			add edx, colunas + 1
 00000058  E2 F6			loop LtelaBase

					ret
 0000005A  59		   *	    pop    ecx
 0000005B  5A		   *	    pop    edx
 0000005C  C3		   *	    ret    00000h
 0000005D			desenharTelaBase endp

 0000005D			desenharTelaSobre proc
 0000005D  E8 FFFFFFD7			call desenharTelaBase

					mGotoxy 53, 5
 00000062  52		     1		push edx
 00000063  B6 05	     1		mov  dh,5
 00000065  B2 35	     1		mov  dl,53
 00000067  E8 00000000 E     1		call Gotoxy
 0000006C  5A		     1		pop  edx
					mWrite "CHOPPER TOWN"
 00000E30		     1		.data		
 00000E30 43 48 4F 50 50     1		??0000 BYTE "CHOPPER TOWN",0	
	   45 52 20 54 4F
	   57 4E 00
 0000006D		     1		.code
 0000006D  52		     1		push	edx
 0000006E  BA 00000E30 R     1		mov	edx,OFFSET ??0000
 00000073  E8 00000000 E     1		call	WriteString
 00000078  5A		     1		pop	edx
					
					mGotoxy 13, 12
 00000079  52		     1		push edx
 0000007A  B6 0C	     1		mov  dh,12
 0000007C  B2 0D	     1		mov  dl,13
 0000007E  E8 00000000 E     1		call Gotoxy
 00000083  5A		     1		pop  edx
					mWriteChar 175
 00000084  50		     1		push eax
 00000085  B0 AF	     1		mov al, 175
 00000087  E8 00000000 E     1		call WriteChar
 0000008C  58		     1		pop eax
					mWrite " Desenvolvido por:"
 00000E3D		     1		.data		
 00000E3D 20 44 65 73 65     1		??0001 BYTE " Desenvolvido por:",0	
	   6E 76 6F 6C 76
	   69 64 6F 20 70
	   6F 72 3A 00
 0000008D		     1		.code
 0000008D  52		     1		push	edx
 0000008E  BA 00000E3D R     1		mov	edx,OFFSET ??0001
 00000093  E8 00000000 E     1		call	WriteString
 00000098  5A		     1		pop	edx

					mGotoxy 15, 13
 00000099  52		     1		push edx
 0000009A  B6 0D	     1		mov  dh,13
 0000009C  B2 0F	     1		mov  dl,15
 0000009E  E8 00000000 E     1		call Gotoxy
 000000A3  5A		     1		pop  edx
					mWriteChar 175
 000000A4  50		     1		push eax
 000000A5  B0 AF	     1		mov al, 175
 000000A7  E8 00000000 E     1		call WriteChar
 000000AC  58		     1		pop eax
					mWriteChar 175
 000000AD  50		     1		push eax
 000000AE  B0 AF	     1		mov al, 175
 000000B0  E8 00000000 E     1		call WriteChar
 000000B5  58		     1		pop eax
					mWrite " Luiz Arthur Chagas Oliveira - RA: 744344"
 00000E50		     1		.data		
 00000E50 20 4C 75 69 7A     1		??0002 BYTE " Luiz Arthur Chagas Oliveira - RA: 744344",0	
	   20 41 72 74 68
	   75 72 20 43 68
	   61 67 61 73 20
	   4F 6C 69 76 65
	   69 72 61 20 2D
	   20 52 41 3A 20
	   37 34 34 33 34
	   34 00
 000000B6		     1		.code
 000000B6  52		     1		push	edx
 000000B7  BA 00000E50 R     1		mov	edx,OFFSET ??0002
 000000BC  E8 00000000 E     1		call	WriteString
 000000C1  5A		     1		pop	edx

					mGotoxy 15, 14
 000000C2  52		     1		push edx
 000000C3  B6 0E	     1		mov  dh,14
 000000C5  B2 0F	     1		mov  dl,15
 000000C7  E8 00000000 E     1		call Gotoxy
 000000CC  5A		     1		pop  edx
					mWriteChar 175
 000000CD  50		     1		push eax
 000000CE  B0 AF	     1		mov al, 175
 000000D0  E8 00000000 E     1		call WriteChar
 000000D5  58		     1		pop eax
					mWriteChar 175
 000000D6  50		     1		push eax
 000000D7  B0 AF	     1		mov al, 175
 000000D9  E8 00000000 E     1		call WriteChar
 000000DE  58		     1		pop eax
					mWrite " Vitor Freitas Xavier Soares - RA: 727358"
 00000E7A		     1		.data		
 00000E7A 20 56 69 74 6F     1		??0003 BYTE " Vitor Freitas Xavier Soares - RA: 727358",0	
	   72 20 46 72 65
	   69 74 61 73 20
	   58 61 76 69 65
	   72 20 53 6F 61
	   72 65 73 20 2D
	   20 52 41 3A 20
	   37 32 37 33 35
	   38 00
 000000DF		     1		.code
 000000DF  52		     1		push	edx
 000000E0  BA 00000E7A R     1		mov	edx,OFFSET ??0003
 000000E5  E8 00000000 E     1		call	WriteString
 000000EA  5A		     1		pop	edx

					mGotoxy 13, 16
 000000EB  52		     1		push edx
 000000EC  B6 10	     1		mov  dh,16
 000000EE  B2 0D	     1		mov  dl,13
 000000F0  E8 00000000 E     1		call Gotoxy
 000000F5  5A		     1		pop  edx
					mWriteChar 175
 000000F6  50		     1		push eax
 000000F7  B0 AF	     1		mov al, 175
 000000F9  E8 00000000 E     1		call WriteChar
 000000FE  58		     1		pop eax
					mWrite " Desenvolvido para a disciplina de Laboratorio de Arquitetura de Computadores 2, no semestre de 2019-1"
 00000EA4		     1		.data		
 00000EA4 20 44 65 73 65     1		??0004 BYTE " Desenvolvido para a disciplina de Laboratorio de Arquitetura de Computadores 2, no semestre de 2019-1",0	
	   6E 76 6F 6C 76
	   69 64 6F 20 70
	   61 72 61 20 61
	   20 64 69 73 63
	   69 70 6C 69 6E
	   61 20 64 65 20
	   4C 61 62 6F 72
	   61 74 6F 72 69
	   6F 20 64 65 20
	   41 72 71 75 69
	   74 65 74 75 72
	   61 20 64 65 20
	   43 6F 6D 70 75
	   74 61 64 6F 72
	   65 73 20 32 2C
	   20 6E 6F 20 73
	   65 6D 65 73 74
	   72 65 20 64 65
	   20 32 30 31 39
	   2D 31 00
 000000FF		     1		.code
 000000FF  52		     1		push	edx
 00000100  BA 00000EA4 R     1		mov	edx,OFFSET ??0004
 00000105  E8 00000000 E     1		call	WriteString
 0000010A  5A		     1		pop	edx

					mGotoxy 13, 18
 0000010B  52		     1		push edx
 0000010C  B6 12	     1		mov  dh,18
 0000010E  B2 0D	     1		mov  dl,13
 00000110  E8 00000000 E     1		call Gotoxy
 00000115  5A		     1		pop  edx
					mWriteChar 175
 00000116  50		     1		push eax
 00000117  B0 AF	     1		mov al, 175
 00000119  E8 00000000 E     1		call WriteChar
 0000011E  58		     1		pop eax
					mWrite " Disciplina ministrada pelo Prof. Dr. Luciano de Oliveira Neris"
 00000F0B		     1		.data		
 00000F0B 20 44 69 73 63     1		??0005 BYTE " Disciplina ministrada pelo Prof. Dr. Luciano de Oliveira Neris",0	
	   69 70 6C 69 6E
	   61 20 6D 69 6E
	   69 73 74 72 61
	   64 61 20 70 65
	   6C 6F 20 50 72
	   6F 66 2E 20 44
	   72 2E 20 4C 75
	   63 69 61 6E 6F
	   20 64 65 20 4F
	   6C 69 76 65 69
	   72 61 20 4E 65
	   72 69 73 00
 0000011F		     1		.code
 0000011F  52		     1		push	edx
 00000120  BA 00000F0B R     1		mov	edx,OFFSET ??0005
 00000125  E8 00000000 E     1		call	WriteString
 0000012A  5A		     1		pop	edx

 0000012B  C3				ret
 0000012C			desenharTelaSobre endp

 0000012C			desenharTelaInstrucoes proc
 0000012C  E8 FFFFFF08			call desenharTelaBase
					
					mGotoxy 53, 5
 00000131  52		     1		push edx
 00000132  B6 05	     1		mov  dh,5
 00000134  B2 35	     1		mov  dl,53
 00000136  E8 00000000 E     1		call Gotoxy
 0000013B  5A		     1		pop  edx
					mWrite "CHOPPER TOWN"
 00000F4B		     1		.data		
 00000F4B 43 48 4F 50 50     1		??0006 BYTE "CHOPPER TOWN",0	
	   45 52 20 54 4F
	   57 4E 00
 0000013C		     1		.code
 0000013C  52		     1		push	edx
 0000013D  BA 00000F4B R     1		mov	edx,OFFSET ??0006
 00000142  E8 00000000 E     1		call	WriteString
 00000147  5A		     1		pop	edx

					mGotoxy 20, 12
 00000148  52		     1		push edx
 00000149  B6 0C	     1		mov  dh,12
 0000014B  B2 14	     1		mov  dl,20
 0000014D  E8 00000000 E     1		call Gotoxy
 00000152  5A		     1		pop  edx
					mWriteChar 175
 00000153  50		     1		push eax
 00000154  B0 AF	     1		mov al, 175
 00000156  E8 00000000 E     1		call WriteChar
 0000015B  58		     1		pop eax
					mWrite " O jogador deve mover o helicoptero, para cima ou para baixo, evitando os obstaculos"
 00000F58		     1		.data		
 00000F58 20 4F 20 6A 6F     1		??0007 BYTE " O jogador deve mover o helicoptero, para cima ou para baixo, evitando os obstaculos",0	
	   67 61 64 6F 72
	   20 64 65 76 65
	   20 6D 6F 76 65
	   72 20 6F 20 68
	   65 6C 69 63 6F
	   70 74 65 72 6F
	   2C 20 70 61 72
	   61 20 63 69 6D
	   61 20 6F 75 20
	   70 61 72 61 20
	   62 61 69 78 6F
	   2C 20 65 76 69
	   74 61 6E 64 6F
	   20 6F 73 20 6F
	   62 73 74 61 63
	   75 6C 6F 73 00
 0000015C		     1		.code
 0000015C  52		     1		push	edx
 0000015D  BA 00000F58 R     1		mov	edx,OFFSET ??0007
 00000162  E8 00000000 E     1		call	WriteString
 00000167  5A		     1		pop	edx

					mGotoxy 20, 14
 00000168  52		     1		push edx
 00000169  B6 0E	     1		mov  dh,14
 0000016B  B2 14	     1		mov  dl,20
 0000016D  E8 00000000 E     1		call Gotoxy
 00000172  5A		     1		pop  edx
					mWriteChar 175
 00000173  50		     1		push eax
 00000174  B0 AF	     1		mov al, 175
 00000176  E8 00000000 E     1		call WriteChar
 0000017B  58		     1		pop eax
					mWrite " O jogador deve ir o mais longe possivel"
 00000FAD		     1		.data		
 00000FAD 20 4F 20 6A 6F     1		??0008 BYTE " O jogador deve ir o mais longe possivel",0	
	   67 61 64 6F 72
	   20 64 65 76 65
	   20 69 72 20 6F
	   20 6D 61 69 73
	   20 6C 6F 6E 67
	   65 20 70 6F 73
	   73 69 76 65 6C
	   00
 0000017C		     1		.code
 0000017C  52		     1		push	edx
 0000017D  BA 00000FAD R     1		mov	edx,OFFSET ??0008
 00000182  E8 00000000 E     1		call	WriteString
 00000187  5A		     1		pop	edx

					mGotoxy 20, 16
 00000188  52		     1		push edx
 00000189  B6 10	     1		mov  dh,16
 0000018B  B2 14	     1		mov  dl,20
 0000018D  E8 00000000 E     1		call Gotoxy
 00000192  5A		     1		pop  edx
					mWriteChar 175
 00000193  50		     1		push eax
 00000194  B0 AF	     1		mov al, 175
 00000196  E8 00000000 E     1		call WriteChar
 0000019B  58		     1		pop eax
					mWrite " O jogador ganha pontos de acordo com o tempo de jogo"
 00000FD6		     1		.data		
 00000FD6 20 4F 20 6A 6F     1		??0009 BYTE " O jogador ganha pontos de acordo com o tempo de jogo",0	
	   67 61 64 6F 72
	   20 67 61 6E 68
	   61 20 70 6F 6E
	   74 6F 73 20 64
	   65 20 61 63 6F
	   72 64 6F 20 63
	   6F 6D 20 6F 20
	   74 65 6D 70 6F
	   20 64 65 20 6A
	   6F 67 6F 00
 0000019C		     1		.code
 0000019C  52		     1		push	edx
 0000019D  BA 00000FD6 R     1		mov	edx,OFFSET ??0009
 000001A2  E8 00000000 E     1		call	WriteString
 000001A7  5A		     1		pop	edx

					mGotoxy 20, 18
 000001A8  52		     1		push edx
 000001A9  B6 12	     1		mov  dh,18
 000001AB  B2 14	     1		mov  dl,20
 000001AD  E8 00000000 E     1		call Gotoxy
 000001B2  5A		     1		pop  edx
					mWriteChar 175
 000001B3  50		     1		push eax
 000001B4  B0 AF	     1		mov al, 175
 000001B6  E8 00000000 E     1		call WriteChar
 000001BB  58		     1		pop eax
					mWrite " O joga acaba quando o helicoptero colidir com qualquer obstaculo"
 0000100C		     1		.data		
 0000100C 20 4F 20 6A 6F     1		??000A BYTE " O joga acaba quando o helicoptero colidir com qualquer obstaculo",0	
	   67 61 20 61 63
	   61 62 61 20 71
	   75 61 6E 64 6F
	   20 6F 20 68 65
	   6C 69 63 6F 70
	   74 65 72 6F 20
	   63 6F 6C 69 64
	   69 72 20 63 6F
	   6D 20 71 75 61
	   6C 71 75 65 72
	   20 6F 62 73 74
	   61 63 75 6C 6F
	   00
 000001BC		     1		.code
 000001BC  52		     1		push	edx
 000001BD  BA 0000100C R     1		mov	edx,OFFSET ??000A
 000001C2  E8 00000000 E     1		call	WriteString
 000001C7  5A		     1		pop	edx

					mGotoxy 20, 20
 000001C8  52		     1		push edx
 000001C9  B6 14	     1		mov  dh,20
 000001CB  B2 14	     1		mov  dl,20
 000001CD  E8 00000000 E     1		call Gotoxy
 000001D2  5A		     1		pop  edx
					mWriteChar 175
 000001D3  50		     1		push eax
 000001D4  B0 AF	     1		mov al, 175
 000001D6  E8 00000000 E     1		call WriteChar
 000001DB  58		     1		pop eax
					mWrite " Para mover o helicoptero para cima, use W ou a seta para cima"
 0000104E		     1		.data		
 0000104E 20 50 61 72 61     1		??000B BYTE " Para mover o helicoptero para cima, use W ou a seta para cima",0	
	   20 6D 6F 76 65
	   72 20 6F 20 68
	   65 6C 69 63 6F
	   70 74 65 72 6F
	   20 70 61 72 61
	   20 63 69 6D 61
	   2C 20 75 73 65
	   20 57 20 6F 75
	   20 61 20 73 65
	   74 61 20 70 61
	   72 61 20 63 69
	   6D 61 00
 000001DC		     1		.code
 000001DC  52		     1		push	edx
 000001DD  BA 0000104E R     1		mov	edx,OFFSET ??000B
 000001E2  E8 00000000 E     1		call	WriteString
 000001E7  5A		     1		pop	edx

					mGotoxy 20, 22
 000001E8  52		     1		push edx
 000001E9  B6 16	     1		mov  dh,22
 000001EB  B2 14	     1		mov  dl,20
 000001ED  E8 00000000 E     1		call Gotoxy
 000001F2  5A		     1		pop  edx
					mWriteChar 175
 000001F3  50		     1		push eax
 000001F4  B0 AF	     1		mov al, 175
 000001F6  E8 00000000 E     1		call WriteChar
 000001FB  58		     1		pop eax
					mWrite " Para mover o helicoptero para cima, use S ou a seta para baixo"
 0000108D		     1		.data		
 0000108D 20 50 61 72 61     1		??000C BYTE " Para mover o helicoptero para cima, use S ou a seta para baixo",0	
	   20 6D 6F 76 65
	   72 20 6F 20 68
	   65 6C 69 63 6F
	   70 74 65 72 6F
	   20 70 61 72 61
	   20 63 69 6D 61
	   2C 20 75 73 65
	   20 53 20 6F 75
	   20 61 20 73 65
	   74 61 20 70 61
	   72 61 20 62 61
	   69 78 6F 00
 000001FC		     1		.code
 000001FC  52		     1		push	edx
 000001FD  BA 0000108D R     1		mov	edx,OFFSET ??000C
 00000202  E8 00000000 E     1		call	WriteString
 00000207  5A		     1		pop	edx
					
 00000208  C3				ret
 00000209			desenharTelaInstrucoes endp

 00000209			desenhaTelaInicial proc
 00000209  E8 FFFFFE2B			call desenharTelaBase
					
					mGotoxy 53, 5
 0000020E  52		     1		push edx
 0000020F  B6 05	     1		mov  dh,5
 00000211  B2 35	     1		mov  dl,53
 00000213  E8 00000000 E     1		call Gotoxy
 00000218  5A		     1		pop  edx
					mWrite "CHOPPER TOWN"
 000010CD		     1		.data		
 000010CD 43 48 4F 50 50     1		??000D BYTE "CHOPPER TOWN",0	
	   45 52 20 54 4F
	   57 4E 00
 00000219		     1		.code
 00000219  52		     1		push	edx
 0000021A  BA 000010CD R     1		mov	edx,OFFSET ??000D
 0000021F  E8 00000000 E     1		call	WriteString
 00000224  5A		     1		pop	edx

					mGotoxy 54, 12
 00000225  52		     1		push edx
 00000226  B6 0C	     1		mov  dh,12
 00000228  B2 36	     1		mov  dl,54
 0000022A  E8 00000000 E     1		call Gotoxy
 0000022F  5A		     1		pop  edx
					mWrite "Jogar"
 000010DA		     1		.data		
 000010DA 4A 6F 67 61 72     1		??000E BYTE "Jogar",0	
	   00
 00000230		     1		.code
 00000230  52		     1		push	edx
 00000231  BA 000010DA R     1		mov	edx,OFFSET ??000E
 00000236  E8 00000000 E     1		call	WriteString
 0000023B  5A		     1		pop	edx

					mGotoxy 54, 14
 0000023C  52		     1		push edx
 0000023D  B6 0E	     1		mov  dh,14
 0000023F  B2 36	     1		mov  dl,54
 00000241  E8 00000000 E     1		call Gotoxy
 00000246  5A		     1		pop  edx
					mWrite "Como Jogar"
 000010E0		     1		.data		
 000010E0 43 6F 6D 6F 20     1		??000F BYTE "Como Jogar",0	
	   4A 6F 67 61 72
	   00
 00000247		     1		.code
 00000247  52		     1		push	edx
 00000248  BA 000010E0 R     1		mov	edx,OFFSET ??000F
 0000024D  E8 00000000 E     1		call	WriteString
 00000252  5A		     1		pop	edx

					mGotoxy 54, 16
 00000253  52		     1		push edx
 00000254  B6 10	     1		mov  dh,16
 00000256  B2 36	     1		mov  dl,54
 00000258  E8 00000000 E     1		call Gotoxy
 0000025D  5A		     1		pop  edx
					mWrite "Sobre"
 000010EB		     1		.data		
 000010EB 53 6F 62 72 65     1		??0010 BYTE "Sobre",0	
	   00
 0000025E		     1		.code
 0000025E  52		     1		push	edx
 0000025F  BA 000010EB R     1		mov	edx,OFFSET ??0010
 00000264  E8 00000000 E     1		call	WriteString
 00000269  5A		     1		pop	edx

 0000026A  C3				ret
 0000026B			desenhaTelaInicial endp

 0000026B			moverParaSeletor proc
 0000026B  80 3D 00000000 R		cmp opcao_selecionada, 0
	   00
 00000272  74 15			je seletor0
 00000274  80 3D 00000000 R		cmp opcao_selecionada, 1
	   01
 0000027B  74 18			je seletor1

					mGotoxy 51, seletor_offset + 2 * seletor_step
 0000027D  52		     1		push edx
 0000027E  B6 10	     1		mov  dh,seletor_offset + 2 * seletor_step
 00000280  B2 33	     1		mov  dl,51
 00000282  E8 00000000 E     1		call Gotoxy
 00000287  5A		     1		pop  edx
 00000288  C3				ret

 00000289			seletor0 :
					mGotoxy 51, seletor_offset
 00000289  52		     1		push edx
 0000028A  B6 0C	     1		mov  dh,seletor_offset
 0000028C  B2 33	     1		mov  dl,51
 0000028E  E8 00000000 E     1		call Gotoxy
 00000293  5A		     1		pop  edx
 00000294  C3				ret

 00000295			seletor1 :
					mGotoxy 51, seletor_offset + seletor_step
 00000295  52		     1		push edx
 00000296  B6 0E	     1		mov  dh,seletor_offset + seletor_step
 00000298  B2 33	     1		mov  dl,51
 0000029A  E8 00000000 E     1		call Gotoxy
 0000029F  5A		     1		pop  edx
 000002A0  C3				ret
 000002A1			moverParaSeletor endp

 000002A1			desenharSeletor proc uses eax
 000002A1  50		   *	    push   eax
 000002A2  E8 FFFFFFC4			call moverParaSeletor
					
 000002A7  B0 AF			mov al, 175
 000002A9  E8 00000000 E		call WriteChar

					ret
 000002AE  58		   *	    pop    eax
 000002AF  C3		   *	    ret    00000h
 000002B0			desenharSeletor endp

 000002B0			limparSeletor proc uses eax
 000002B0  50		   *	    push   eax
 000002B1  E8 FFFFFFB5			call moverParaSeletor

 000002B6  B0 20			mov al, " "
 000002B8  E8 00000000 E		call WriteChar
					
					ret
 000002BD  58		   *	    pop    eax
 000002BE  C3		   *	    ret    00000h
 000002BF			limparSeletor endp

 000002BF			incOpcaoSelecionada proc
 000002BF  80 3D 00000000 R		cmp opcao_selecionada, 2
	   02
 000002C6  7C 08			jl incSimplesOS
 000002C8  C6 05 00000000 R		mov opcao_selecionada, 0
	   00
 000002CF  C3				ret

 000002D0			incSimplesOS:
 000002D0  FE 05 00000000 R		inc opcao_selecionada
 000002D6  C3				ret
 000002D7			incOpcaoSelecionada endp

 000002D7			decOpcaoSelecionada proc
 000002D7  80 3D 00000000 R		cmp opcao_selecionada, 0
	   00
 000002DE  7F 08			jg decSimplesOS
 000002E0  C6 05 00000000 R		mov opcao_selecionada, 2
	   02
 000002E7  C3				ret

 000002E8			decSimplesOS :
 000002E8  FE 0D 00000000 R		dec opcao_selecionada
 000002EE  C3				ret
 000002EF			decOpcaoSelecionada endp

 000002EF			telaInstrucoes proc uses eax edx
 000002EF  50		   *	    push   eax
 000002F0  52		   *	    push   edx
 000002F1  E8 FFFFFE36			call desenharTelaInstrucoes

 000002F6			loopTelaInstrucoes:
 000002F6  B8 00000032			mov eax, 50
 000002FB  E8 00000000 E		call Delay

 00000300  E8 00000000 E		call ReadKey
 00000305  74 EF			jz loopTelaInstrucoes

 00000307  66| 83 FA 1B			cmp dx, VK_ESCAPE
 0000030B  74 02			je T_INSTR_TECLA_ESC

 0000030D  EB E7			jmp loopTelaInstrucoes

 0000030F			T_INSTR_TECLA_ESC:
 0000030F  C6 05 00000001 R		mov tela_atual, 0
	   00
					ret
 00000316  5A		   *	    pop    edx
 00000317  58		   *	    pop    eax
 00000318  C3		   *	    ret    00000h

 00000319			telaInstrucoes endp

 00000319			telaSobre proc uses eax edx
 00000319  50		   *	    push   eax
 0000031A  52		   *	    push   edx
 0000031B  E8 FFFFFD3D			call desenharTelaSobre

 00000320			loopTelaSobre :
 00000320  B8 00000032			mov eax, 50
 00000325  E8 00000000 E		call Delay

 0000032A  E8 00000000 E		call ReadKey
 0000032F  74 EF			jz loopTelaSobre

 00000331  66| 83 FA 1B			cmp dx, VK_ESCAPE
 00000335  74 02			je T_SOBRE_TECLA_ESC

 00000337  EB E7			jmp loopTelaSobre

 00000339			T_SOBRE_TECLA_ESC :
 00000339  C6 05 00000001 R		mov tela_atual, 0
	   00
					ret
 00000340  5A		   *	    pop    edx
 00000341  58		   *	    pop    eax
 00000342  C3		   *	    ret    00000h

 00000343			telaSobre endp

 00000343			telaInicial proc uses eax edx
 00000343  50		   *	    push   eax
 00000344  52		   *	    push   edx
 00000345  E8 FFFFFEBF			call desenhaTelaInicial
 0000034A  E8 FFFFFF52			call desenharSeletor

 0000034F			loopTelaInicial:
 0000034F  B8 00000032			mov eax, 50
 00000354  E8 00000000 E		call Delay

 00000359  E8 00000000 E		call ReadKey
 0000035E  74 EF			jz loopTelaInicial
					
 00000360  66| 83 FA 28			cmp dx, VK_DOWN
 00000364  74 1A			je T_INI_TECLA_PARA_BAIXO

 00000366  66| 83 FA 53			cmp dx, 53h
 0000036A  74 14			je T_INI_TECLA_PARA_BAIXO

 0000036C  66| 83 FA 26			cmp dx, VK_UP
 00000370  74 1F			je T_INI_TECLA_PARA_CIMA

 00000372  66| 83 FA 57			cmp dx, 57h
 00000376  74 19			je T_INI_TECLA_PARA_CIMA

 00000378  66| 83 FA 0D			cmp dx, VK_RETURN
 0000037C  74 24			je T_INI_TECLA_ENTER

 0000037E  EB CF			jmp loopTelaInicial

 00000380			T_INI_TECLA_PARA_BAIXO :
 00000380  E8 FFFFFF2B			call limparSeletor
 00000385  E8 FFFFFF35			call incOpcaoSelecionada
 0000038A  E8 FFFFFF12			call desenharSeletor

 0000038F  EB BE			jmp loopTelaInicial

 00000391			T_INI_TECLA_PARA_CIMA :
 00000391  E8 FFFFFF1A			call limparSeletor
 00000396  E8 FFFFFF3C			call decOpcaoSelecionada
 0000039B  E8 FFFFFF01			call desenharSeletor

 000003A0  EB AD			jmp loopTelaInicial

 000003A2			T_INI_TECLA_ENTER :
 000003A2  80 3D 00000000 R		cmp opcao_selecionada, 1
	   01
 000003A9  74 0B			je telaAtual1

 000003AB  80 3D 00000000 R		cmp opcao_selecionada, 2
	   02
 000003B2  74 0C			je telaAtual2

 000003B4  EB 99			jmp loopTelaInicial

 000003B6				telaAtual1:
 000003B6  C6 05 00000001 R			mov tela_atual, 1
	   01
						ret
 000003BD  5A		   *	    pop    edx
 000003BE  58		   *	    pop    eax
 000003BF  C3		   *	    ret    00000h

 000003C0				telaAtual2:
 000003C0  C6 05 00000001 R			mov tela_atual, 2
	   02
						ret
 000003C7  5A		   *	    pop    edx
 000003C8  58		   *	    pop    eax
 000003C9  C3		   *	    ret    00000h
					

					ret 
 000003CA  5A		   *	    pop    edx
 000003CB  58		   *	    pop    eax
 000003CC  C3		   *	    ret    00000h
 000003CD			telaInicial endp

				end main
Microsoft (R) Macro Assembler Version 14.16.27030.1	    06/04/19 15:26:55
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteChar . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000010F1 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000003CD Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
decOpcaoSelecionada  . . . . . .	P Near	 000002D7 _TEXT	Length= 00000018 Public STDCALL
  decSimplesOS . . . . . . . . .	L Near	 000002E8 _TEXT	
desenhaTelaInicial . . . . . . .	P Near	 00000209 _TEXT	Length= 00000062 Public STDCALL
desenharSeletor  . . . . . . . .	P Near	 000002A1 _TEXT	Length= 0000000F Public STDCALL
desenharTelaBase . . . . . . . .	P Near	 00000039 _TEXT	Length= 00000024 Public STDCALL
  LtelaBase  . . . . . . . . . .	L Near	 00000050 _TEXT	
desenharTelaInstrucoes . . . . .	P Near	 0000012C _TEXT	Length= 000000DD Public STDCALL
desenharTelaSobre  . . . . . . .	P Near	 0000005D _TEXT	Length= 000000CF Public STDCALL
incOpcaoSelecionada  . . . . . .	P Near	 000002BF _TEXT	Length= 00000018 Public STDCALL
  incSimplesOS . . . . . . . . .	L Near	 000002D0 _TEXT	
limparSeletor  . . . . . . . . .	P Near	 000002B0 _TEXT	Length= 0000000F Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000039 Public STDCALL
  mainLp . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  tlInit . . . . . . . . . . . .	L Near	 0000001D _TEXT	
  tlInstr  . . . . . . . . . . .	L Near	 00000024 _TEXT	
  tlSobre  . . . . . . . . . . .	L Near	 0000002B _TEXT	
moverParaSeletor . . . . . . . .	P Near	 0000026B _TEXT	Length= 00000036 Public STDCALL
  seletor0 . . . . . . . . . . .	L Near	 00000289 _TEXT	
  seletor1 . . . . . . . . . . .	L Near	 00000295 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
telaInicial  . . . . . . . . . .	P Near	 00000343 _TEXT	Length= 0000008A Public STDCALL
  loopTelaInicial  . . . . . . .	L Near	 0000034F _TEXT	
  T_INI_TECLA_PARA_BAIXO . . . .	L Near	 00000380 _TEXT	
  T_INI_TECLA_PARA_CIMA  . . . .	L Near	 00000391 _TEXT	
  T_INI_TECLA_ENTER  . . . . . .	L Near	 000003A2 _TEXT	
  telaAtual1 . . . . . . . . . .	L Near	 000003B6 _TEXT	
  telaAtual2 . . . . . . . . . .	L Near	 000003C0 _TEXT	
telaInstrucoes . . . . . . . . .	P Near	 000002EF _TEXT	Length= 0000002A Public STDCALL
  loopTelaInstrucoes . . . . . .	L Near	 000002F6 _TEXT	
  T_INSTR_TECLA_ESC  . . . . . .	L Near	 0000030F _TEXT	
telaSobre  . . . . . . . . . . .	P Near	 00000319 _TEXT	Length= 0000002A Public STDCALL
  loopTelaSobre  . . . . . . . .	L Near	 00000320 _TEXT	
  T_SOBRE_TECLA_ESC  . . . . . .	L Near	 00000339 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000E30 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 00000E3D _DATA	
??0002 . . . . . . . . . . . . .	Byte	 00000E50 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 00000E7A _DATA	
??0004 . . . . . . . . . . . . .	Byte	 00000EA4 _DATA	
??0005 . . . . . . . . . . . . .	Byte	 00000F0B _DATA	
??0006 . . . . . . . . . . . . .	Byte	 00000F4B _DATA	
??0007 . . . . . . . . . . . . .	Byte	 00000F58 _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00000FAD _DATA	
??0009 . . . . . . . . . . . . .	Byte	 00000FD6 _DATA	
??000A . . . . . . . . . . . . .	Byte	 0000100C _DATA	
??000B . . . . . . . . . . . . .	Byte	 0000104E _DATA	
??000C . . . . . . . . . . . . .	Byte	 0000108D _DATA	
??000D . . . . . . . . . . . . .	Byte	 000010CD _DATA	
??000E . . . . . . . . . . . . .	Byte	 000010DA _DATA	
??000F . . . . . . . . . . . . .	Byte	 000010E0 _DATA	
??0010 . . . . . . . . . . . . .	Byte	 000010EB _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
colunas  . . . . . . . . . . . .	Number	 00000078h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
linhas . . . . . . . . . . . . .	Number	 0000001Eh   
magenta  . . . . . . . . . . . .	Number	 00000005h   
opcao_selecionada  . . . . . . .	Byte	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
seletor_offset . . . . . . . . .	Number	 0000000Ch   
seletor_step . . . . . . . . . .	Number	 00000002h   
tela_atual . . . . . . . . . . .	Byte	 00000001 _DATA	
tela_base  . . . . . . . . . . .	Byte	 00000002 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
